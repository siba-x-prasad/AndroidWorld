plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.swasi.androidworld"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    /*************** JETPACK COMPOSE ***************/
    implementation("androidx.compose.ui:ui:1.1.1")
    // Tooling support (Previews, etc.)
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Compose Material Design
    implementation 'androidx.compose.material:material:1.1.1'
    // Animations
    implementation 'androidx.compose.animation:animation:1.1.1'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    implementation("androidx.compose.ui:ui-tooling:1.1.1")
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation("androidx.compose.foundation:foundation:1.1.1")
    // Material Design
    implementation("androidx.compose.material:material:1.1.1")
    // Material design icons
    implementation("androidx.compose.material:material-icons-core:1.1.1")
    implementation("androidx.compose.material:material-icons-extended:1.1.1")
    // Integration with observables
    implementation("androidx.compose.runtime:runtime-livedata:1.1.1")
    implementation("androidx.compose.runtime:runtime-rxjava2:1.1.1")
    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.1.1")

    implementation "androidx.compose.compiler:compiler:1.2.0-alpha06"
    implementation "androidx.compose.material3:material3:1.0.0-alpha08"
    implementation "androidx.compose.runtime:runtime:1.2.0-alpha06"
    implementation 'androidx.ui:ui-framework:0.1.0-dev10'
    implementation "androidx.compose.material:material-icons-extended:1.2.0-alpha06"

    // image loading
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'

    /*************** ROOM DATABASE ***************/
    implementation("androidx.room:room-runtime:2.4.2")
    annotationProcessor("androidx.room:room-compiler:2.4.2")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.2")
    // To use Kotlin Symbolic Processing (KSP)
//    ksp("androidx.room:room-compiler:2.4.2")

    /*************** NAVIGATION ***************/
    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.4.1")
    implementation("androidx.navigation:navigation-ui-ktx:2.4.1")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.4.1")
    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.4.1")
    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.4.1")

    /*************** DAGGER HILT ***************/
    implementation("com.google.dagger:hilt-android:2.40.5")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    /*************** WORK MANAGER ***************/
    // (Java only)
    implementation("androidx.work:work-runtime:2.7.1")
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:2.7.1")
    // optional - RxJava2 support
    implementation("androidx.work:work-rxjava2:2.7.1")
    // optional - GCMNetworkManager support
    implementation("androidx.work:work-gcm:2.7.1")
    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:2.7.1")
    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:2.7.1"

    /*********** LIFE CYCLE *************/
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-alpha05")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha05")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.5.0-alpha05")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-alpha05")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.0-alpha05")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:2.5.0-alpha05")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:2.5.0-alpha05")

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:2.5.0-alpha05")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation("androidx.lifecycle:lifecycle-process:2.5.0-alpha05")

    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.5.0-alpha05")

    /************ VIEWPAGER 2 ***************/
    implementation("androidx.viewpager2:viewpager2:1.0.0")

    /************* DATA STORE ****************/
    implementation("androidx.datastore:datastore:1.0.0")
    implementation("androidx.datastore:datastore-core:1.0.0")

    /************  PROTO DATASTORE  ***************/

    /************* COROUTINES *********************/
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0")



}